Start a pod

kubectl run easy-recipes --image=ram1uj/easy-recipes

Get the status of the pod

kubectl get pods

kubectl run spring-boot --image=ram1uj/spring-boot

Get the status of the pod with more details

kubectl get pods -o wide

Connect one pod to another

kubectl exec easy-recipes -- sh
curl 10.1.0.14:5000/message

or

kubectl exec -it easy-recipes -- curl 10.1.0.14:5000/message

Create a service for the pod

kubectl expose pod spring-boot --target-port=5000 --port=80 --type=NodePort

Get the service details

kubectl get svc


know the active port on with the application is running

netstat -tuln

kubectl exec -it easy-recipes -- netstat -tuln


Create a deployment for the pod

kubectl create deployment easy-recipes --image=ram1uj/easy-recipes

kubectl get deployments

kubectl expose deployment easy-recipes --target-port=5000 --port=80 --type=NodePort

Scale the deployment to 3 replicas
kubectl scale deployment easy-recipes --replicas=3

Update the deployment with a new image

kubectl set image deployment/easy-recipes easy-recipes=ram1uj/flask-app